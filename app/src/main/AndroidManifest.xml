<?xml version="1.0" encoding="utf-8"?>
<manifest xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:tools="http://schemas.android.com/tools">
    <uses-feature
        android:glEsVersion="0x00030002"
        android:required="true" />
    <uses-feature
        android:name="android.hardware.opengles.aep"
        android:required="true" />

    <!-- This section allows us to avoid pulling Oculus SDK's libopenxr_loader into our app and use the Apache-licensed OpenXR loader instead.
      Khronos' loader will pull in the Oculus implementation from "libopenxr_forwardloader.oculus.so",
      which is a system library resident on the OS image and therefore falls under the GPL "system libraries" exception. -->
    <uses-permission android:name="org.khronos.openxr.permission.OPENXR_SYSTEM" />
    <queries>
        <provider android:authorities="org.khronos.openxr.runtime_broker;org.khronos.openxr.system_runtime_broker" />

        <intent>
            <action android:name="org.khronos.openxr.OpenXRRuntimeService" />
        </intent>
        <intent>
            <action android:name="org.khronos.openxr.OpenXRApiLayerService" />
        </intent>
    </queries>

    <application
        android:allowBackup="true"
        android:icon="@mipmap/ic_launcher"
        android:label="@string/app_name"
        android:roundIcon="@mipmap/ic_launcher_round"
        android:supportsRtl="true"
        tools:targetApi="31">
        <activity
            android:name=".MainActivity"
            android:exported="true"
            android:label="@string/app_name">
            <intent-filter>
                <action android:name="android.intent.action.MAIN" />
                <category android:name="com.oculus.intent.category.VR" />
                <category android:name="android.intent.category.LAUNCHER" />
            </intent-filter>
        </activity>
    </application>

</manifest>